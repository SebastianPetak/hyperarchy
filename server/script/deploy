#!/usr/bin/env ruby
dir = File.dirname(__FILE__)
$: << "#{File.dirname(__FILE__)}/../vendor/net-ssh-shell/lib"
require "rubygems"
require "bundler"
ENV['BUNDLE_GEMFILE'] ||= "#{dir}/../../Gemfile"
Bundler.setup(:development)
require "net/ssh/shell"
require "git"

class Server
  attr_reader :shell, :local_repo

  def initialize(local_repo)
    @local_repo = local_repo
    @shell = Net::SSH.start("hyperarchy.com", "hyperarchy").shell
  end

  def deploy(env, ref)
    cd(deploy_dir(env))
    old_ref = git "rev-parse", :HEAD
    new_ref = local_repo.revparse(ref)

    git :fetch
    git :reset, "--hard", ref
    git :clean, "-df"
    bundle :install if gemfile_changed?(old_ref, new_ref)
    thor "db:migrate", env
  end

  protected

  def gemfile_changed?(old_ref, new_ref)
    local_repo.diff(old_ref, new_ref).path('Gemfile').patch != ""
  end

  def deploy_dir(env)
    "/home/hyperarchy/#{env}"
  end

  def execute!(*args)
    command = args.join(" ")
    puts command
    shell.execute!(command)
  end

  def self.commands(*commands)
    commands.each do |command|
      define_method(command) do |*args|
        execute!(command, *args)
      end
    end
  end

  commands :cd, :git, :bundle, :thor
end

env = ARGV[0]
raise "You must specify an environment (demo or production)" unless env
ref = ARGV[1] || "origin/master"
local_repo = Git.open(File.expand_path("#{dir}/../.."))

Server.new(local_repo).deploy(env, ref)