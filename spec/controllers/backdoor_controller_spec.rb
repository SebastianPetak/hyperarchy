require 'spec_helper'

describe BackdoorController do
  describe "#create" do
    it "merges the given field_values into a plan generated by the blueprint for the model being created" do
      expect {
        post :create, :relation => "users", :field_values => { :first_name => "Joe" }
        response.should be_success
      }.to change(User, :count).by(1)

      user = User.find(response_json['id'])

      user.first_name.should == "Joe"
      user.last_name.should_not be_blank
      response_json.should == user.wire_representation(:ignore_security)
    end
  end

  describe "#clear_tables" do
    it "clears all tables in the database" do
      User.make
      Organization.make
      User.should_not be_empty
      post :clear_tables
      response.should be_success
      Organization.all.should == [Organization.social]
      User.all.should == [User.default_guest]
    end
  end

  describe "#upload_repository" do
    it "inserts the given records into the database after filling in their missing properties with blueprints" do
      freeze_time

      records_json = {
        "candidates" => {
          "1" => { "id" => 1, "election_id" => 1, "creator_id" => 2}
        }
      }.to_json

      post :upload_repository, :records => records_json

      candidate = Candidate.find(1)
      candidate.body.should_not be_blank

      response_json.should == {
        "candidates" => {"1" => candidate.wire_representation }
      }
    end
  end
end
